/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: gtmlib.swig

package gtmlib

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte

const MaxMessageLength int = 2048
const MaxValueLength int = 1048576
type SwigcptrGTM uintptr

func (p SwigcptrGTM) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGTM) SwigIsGTM() {
}

var _wrap_new_GTM unsafe.Pointer

func _swig_wrap_new_GTM() (base SwigcptrGTM) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_GTM, _swig_p)
	return
}

func NewGTM() (_swig_ret GTM) {
	return _swig_wrap_new_GTM()
}

var _wrap_delete_GTM unsafe.Pointer

func _swig_wrap_delete_GTM(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_GTM, _swig_p)
	return
}

func DeleteGTM(arg1 GTM) {
	_swig_wrap_delete_GTM(arg1.Swigcptr())
}

var _wrap_GTM_Version unsafe.Pointer

func _swig_wrap_GTM_Version(base SwigcptrGTM) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GTM_Version, _swig_p)
	return
}

func (arg1 SwigcptrGTM) Version() (_swig_ret string) {
	return _swig_wrap_GTM_Version(arg1)
}

var _wrap_GTM_About unsafe.Pointer

func _swig_wrap_GTM_About(base SwigcptrGTM) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GTM_About, _swig_p)
	return
}

func (arg1 SwigcptrGTM) About() (_swig_ret string) {
	return _swig_wrap_GTM_About(arg1)
}

var _wrap_GTM_Get__SWIG_0 unsafe.Pointer

func _swig_wrap_GTM_Get__SWIG_0(base SwigcptrGTM, _ uintptr, _ uintptr, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GTM_Get__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrGTM) Get__SWIG_0(arg2 Gtm_char_t, arg3 Gtm_char_t, arg4 Gtm_char_t) {
	_swig_wrap_GTM_Get__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

var _wrap_GTM_Set__SWIG_0 unsafe.Pointer

func _swig_wrap_GTM_Set__SWIG_0(base SwigcptrGTM, _ uintptr, _ uintptr, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GTM_Set__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrGTM) Set__SWIG_0(arg2 Gtm_char_t, arg3 Gtm_char_t, arg4 Gtm_char_t) {
	_swig_wrap_GTM_Set__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

var _wrap_GTM_Kill__SWIG_0 unsafe.Pointer

func _swig_wrap_GTM_Kill__SWIG_0(base SwigcptrGTM, _ uintptr, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GTM_Kill__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrGTM) Kill__SWIG_0(arg2 Gtm_char_t, arg3 Gtm_char_t) {
	_swig_wrap_GTM_Kill__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

var _wrap_GTM_Order__SWIG_0 unsafe.Pointer

func _swig_wrap_GTM_Order__SWIG_0(base SwigcptrGTM, _ uintptr, _ uintptr, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GTM_Order__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrGTM) Order__SWIG_0(arg2 Gtm_char_t, arg3 Gtm_char_t, arg4 Gtm_char_t) {
	_swig_wrap_GTM_Order__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

var _wrap_GTM_Query__SWIG_0 unsafe.Pointer

func _swig_wrap_GTM_Query__SWIG_0(base SwigcptrGTM, _ uintptr, _ uintptr, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GTM_Query__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrGTM) Query__SWIG_0(arg2 Gtm_char_t, arg3 Gtm_char_t, arg4 Gtm_char_t) {
	_swig_wrap_GTM_Query__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

var _wrap_GTM_Lock__SWIG_0 unsafe.Pointer

func _swig_wrap_GTM_Lock__SWIG_0(base SwigcptrGTM, _ uintptr, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GTM_Lock__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrGTM) Lock__SWIG_0(arg2 Gtm_char_t, arg3 Gtm_char_t) {
	_swig_wrap_GTM_Lock__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

var _wrap_GTM_Execute__SWIG_0 unsafe.Pointer

func _swig_wrap_GTM_Execute__SWIG_0(base SwigcptrGTM, _ uintptr, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GTM_Execute__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrGTM) Execute__SWIG_0(arg2 Gtm_char_t, arg3 Gtm_char_t) {
	_swig_wrap_GTM_Execute__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

var _wrap_GTM_Get__SWIG_1 unsafe.Pointer

func _swig_wrap_GTM_Get__SWIG_1(base SwigcptrGTM, _ uintptr, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GTM_Get__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrGTM) Get__SWIG_1(arg2 Std_string, arg3 Std_string) {
	_swig_wrap_GTM_Get__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

var _wrap_GTM_Set__SWIG_1 unsafe.Pointer

func _swig_wrap_GTM_Set__SWIG_1(base SwigcptrGTM, _ uintptr, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GTM_Set__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrGTM) Set__SWIG_1(arg2 Std_string, arg3 Std_string) {
	_swig_wrap_GTM_Set__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func (p SwigcptrGTM) Set(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.Set__SWIG_1(a[0].(Std_string), a[1].(Std_string))
		return
	}
	if argc == 3 {
		p.Set__SWIG_0(a[0].(Gtm_char_t), a[1].(Gtm_char_t), a[2].(Gtm_char_t))
		return
	}
	panic("No match for overloaded function call")
}

var _wrap_GTM_Kill__SWIG_1 unsafe.Pointer

func _swig_wrap_GTM_Kill__SWIG_1(base SwigcptrGTM, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GTM_Kill__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrGTM) Kill__SWIG_1(arg2 Std_string) {
	_swig_wrap_GTM_Kill__SWIG_1(arg1, arg2.Swigcptr())
}

func (p SwigcptrGTM) Kill(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Kill__SWIG_1(a[0].(Std_string))
		return
	}
	if argc == 2 {
		p.Kill__SWIG_0(a[0].(Gtm_char_t), a[1].(Gtm_char_t))
		return
	}
	panic("No match for overloaded function call")
}

var _wrap_GTM_Order__SWIG_1 unsafe.Pointer

func _swig_wrap_GTM_Order__SWIG_1(base SwigcptrGTM, _ uintptr, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GTM_Order__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrGTM) Order__SWIG_1(arg2 Std_string, arg3 Std_string) {
	_swig_wrap_GTM_Order__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

var _wrap_GTM_Query__SWIG_1 unsafe.Pointer

func _swig_wrap_GTM_Query__SWIG_1(base SwigcptrGTM, _ uintptr, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GTM_Query__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrGTM) Query__SWIG_1(arg2 Std_string, arg3 Std_string) {
	_swig_wrap_GTM_Query__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

var _wrap_GTM_Lock__SWIG_1 unsafe.Pointer

func _swig_wrap_GTM_Lock__SWIG_1(base SwigcptrGTM, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GTM_Lock__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrGTM) Lock__SWIG_1(arg2 Std_string) {
	_swig_wrap_GTM_Lock__SWIG_1(arg1, arg2.Swigcptr())
}

func (p SwigcptrGTM) Lock(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Lock__SWIG_1(a[0].(Std_string))
		return
	}
	if argc == 2 {
		p.Lock__SWIG_0(a[0].(Gtm_char_t), a[1].(Gtm_char_t))
		return
	}
	panic("No match for overloaded function call")
}

var _wrap_GTM_Execute__SWIG_1 unsafe.Pointer

func _swig_wrap_GTM_Execute__SWIG_1(base SwigcptrGTM, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GTM_Execute__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrGTM) Execute__SWIG_1(arg2 Std_string) {
	_swig_wrap_GTM_Execute__SWIG_1(arg1, arg2.Swigcptr())
}

func (p SwigcptrGTM) Execute(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Execute__SWIG_1(a[0].(Std_string))
		return
	}
	if argc == 2 {
		p.Execute__SWIG_0(a[0].(Gtm_char_t), a[1].(Gtm_char_t))
		return
	}
	panic("No match for overloaded function call")
}

var _wrap_GTM_Get__SWIG_2 unsafe.Pointer

func _swig_wrap_GTM_Get__SWIG_2(base SwigcptrGTM, _ uintptr) (_ SwigcptrStd_string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GTM_Get__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrGTM) Get__SWIG_2(arg2 Std_string) (_swig_ret Std_string) {
	return _swig_wrap_GTM_Get__SWIG_2(arg1, arg2.Swigcptr())
}

func (p SwigcptrGTM) Get(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		return p.Get__SWIG_2(a[0].(Std_string))
	}
	if argc == 2 {
		p.Get__SWIG_1(a[0].(Std_string), a[1].(Std_string))
		return 0
	}
	if argc == 3 {
		p.Get__SWIG_0(a[0].(Gtm_char_t), a[1].(Gtm_char_t), a[2].(Gtm_char_t))
		return 0
	}
	panic("No match for overloaded function call")
}

var _wrap_GTM_Order__SWIG_2 unsafe.Pointer

func _swig_wrap_GTM_Order__SWIG_2(base SwigcptrGTM, _ uintptr) (_ SwigcptrStd_string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GTM_Order__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrGTM) Order__SWIG_2(arg2 Std_string) (_swig_ret Std_string) {
	return _swig_wrap_GTM_Order__SWIG_2(arg1, arg2.Swigcptr())
}

func (p SwigcptrGTM) Order(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		return p.Order__SWIG_2(a[0].(Std_string))
	}
	if argc == 2 {
		p.Order__SWIG_1(a[0].(Std_string), a[1].(Std_string))
		return 0
	}
	if argc == 3 {
		p.Order__SWIG_0(a[0].(Gtm_char_t), a[1].(Gtm_char_t), a[2].(Gtm_char_t))
		return 0
	}
	panic("No match for overloaded function call")
}

var _wrap_GTM_Query__SWIG_2 unsafe.Pointer

func _swig_wrap_GTM_Query__SWIG_2(base SwigcptrGTM, _ uintptr) (_ SwigcptrStd_string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GTM_Query__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrGTM) Query__SWIG_2(arg2 Std_string) (_swig_ret Std_string) {
	return _swig_wrap_GTM_Query__SWIG_2(arg1, arg2.Swigcptr())
}

func (p SwigcptrGTM) Query(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		return p.Query__SWIG_2(a[0].(Std_string))
	}
	if argc == 2 {
		p.Query__SWIG_1(a[0].(Std_string), a[1].(Std_string))
		return 0
	}
	if argc == 3 {
		p.Query__SWIG_0(a[0].(Gtm_char_t), a[1].(Gtm_char_t), a[2].(Gtm_char_t))
		return 0
	}
	panic("No match for overloaded function call")
}

type GTM interface {
	Swigcptr() uintptr
	SwigIsGTM()
	Version() (_swig_ret string)
	About() (_swig_ret string)
	Set(a ...interface{})
	Kill(a ...interface{})
	Lock(a ...interface{})
	Execute(a ...interface{})
	Get(a ...interface{}) interface{}
	Order(a ...interface{}) interface{}
	Query(a ...interface{}) interface{}
}


type SwigcptrGtm_char_t uintptr
type Gtm_char_t interface {
	Swigcptr() uintptr;
}
func (p SwigcptrGtm_char_t) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_string uintptr
type Std_string interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_string) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

